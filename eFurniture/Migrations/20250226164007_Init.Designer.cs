// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eFurniture.Data;

#nullable disable

namespace eFurniture.Migrations
{
    [DbContext(typeof(EFurnitureDbContext))]
    [Migration("20250226164007_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eFurniture.Models.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartId"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CartId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("eFurniture.Models.CartItem", b =>
                {
                    b.Property<int>("CartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartItemId"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("CartItemId");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("eFurniture.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryImage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryImage = "livingroom.jpg",
                            Name = "Living Room"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryImage = "bedroom.jpg",
                            Name = "Bedroom"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryImage = "diningroom.jpg",
                            Name = "Dining Room"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryImage = "office.jpg",
                            Name = "Office"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryImage = "sofas.jpg",
                            Name = "Sofas"
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryImage = "desks_chairs.jpg",
                            Name = "Desks & Chairs"
                        },
                        new
                        {
                            CategoryId = 7,
                            CategoryImage = "decoration.jpg",
                            Name = "Decoration"
                        },
                        new
                        {
                            CategoryId = 8,
                            CategoryImage = "electronics.jpg",
                            Name = "Home Electronics"
                        });
                });

            modelBuilder.Entity("eFurniture.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("eFurniture.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceAtPurchase")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderItemId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("eFurniture.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Availability")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Availability = "In Stock",
                            CategoryId = 1,
                            Description = "Comfortable modern sofa.",
                            Image = "sofa1.jpg",
                            Name = "Modern Sofa",
                            Price = 599.99m
                        },
                        new
                        {
                            ProductId = 2,
                            Availability = "In Stock",
                            CategoryId = 2,
                            Description = "Luxurious king-size bed.",
                            Image = "bed1.jpg",
                            Name = "King Bed",
                            Price = 899.00m
                        },
                        new
                        {
                            ProductId = 3,
                            Availability = "Limited Stock",
                            CategoryId = 3,
                            Description = "Elegant dining table with chairs.",
                            Image = "diningtable1.jpg",
                            Name = "Dining Table Set",
                            Price = 749.50m
                        },
                        new
                        {
                            ProductId = 4,
                            Availability = "Out of Stock",
                            CategoryId = 4,
                            Description = "Spacious office desk.",
                            Image = "desk1.jpg",
                            Name = "Office Desk",
                            Price = 299.00m
                        },
                        new
                        {
                            ProductId = 5,
                            Availability = "In Stock",
                            CategoryId = 5,
                            Description = "Comfortable leather recliner sofa.",
                            Image = "recliner1.jpg",
                            Name = "Leather Recliner",
                            Price = 450.00m
                        },
                        new
                        {
                            ProductId = 6,
                            Availability = "In Stock",
                            CategoryId = 6,
                            Description = "Adjustable ergonomic office chair.",
                            Image = "chair1.jpg",
                            Name = "Ergonomic Chair",
                            Price = 250.00m
                        },
                        new
                        {
                            ProductId = 7,
                            Availability = "In Stock",
                            CategoryId = 7,
                            Description = "Decorative vase set.",
                            Image = "vase1.jpg",
                            Name = "Vase Set",
                            Price = 50.00m
                        },
                        new
                        {
                            ProductId = 8,
                            Availability = "In Stock",
                            CategoryId = 8,
                            Description = "4K Smart TV.",
                            Image = "tv1.jpg",
                            Name = "Smart TV",
                            Price = 800.00m
                        });
                });

            modelBuilder.Entity("eFurniture.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("eFurniture.Models.Cart", b =>
                {
                    b.HasOne("eFurniture.Models.User", "User")
                        .WithOne("Cart")
                        .HasForeignKey("eFurniture.Models.Cart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("eFurniture.Models.CartItem", b =>
                {
                    b.HasOne("eFurniture.Models.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eFurniture.Models.Product", "Product")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("eFurniture.Models.Order", b =>
                {
                    b.HasOne("eFurniture.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("eFurniture.Models.OrderItem", b =>
                {
                    b.HasOne("eFurniture.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eFurniture.Models.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("eFurniture.Models.Product", b =>
                {
                    b.HasOne("eFurniture.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("eFurniture.Models.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("eFurniture.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("eFurniture.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("eFurniture.Models.Product", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("eFurniture.Models.User", b =>
                {
                    b.Navigation("Cart")
                        .IsRequired();

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
